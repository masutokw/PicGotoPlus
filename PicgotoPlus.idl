[
  uuid(B5F434CB-9598-49CC-98E4-8B44F83800B9), 
  version(1.0), 
  helpstring("PicgotoPlus Library")
    
]
library PicgotoPlus
{

  importlib("STDOLE2.TLB");
  importlib("stdvcl40.dll");

  [
    uuid(31854BA3-0C27-478C-833F-8DE8B6C814CD), 
    version(1.0)
  ]
  typedef enum tagAlignmentModes
  {
    algAltAz = 0, 
    algGermanPolar = 1, 
    algPolar = 2
  } AlignmentModes;

  [
    uuid(2A785A3B-401E-47EE-BD2D-B74FA77608E2), 
    version(1.0)
  ]
  typedef enum tagEquatorialCoordinateType
  {
    equLocalTopocentric = 1, 
    equJ2000 = 2, 
    equJ2050 = 3, 
    equOther = 0, 
    equB1950 = 4
  } EquatorialCoordinateType;

  [
    uuid(A3AFF1F4-B1CB-46D7-9E64-DD1DAC979626), 
    version(1.0)
  ]
  typedef enum tagPierSide
  {
    pierEast = 0, 
    pierWest = 1
  } PierSide;

  [
    uuid(4B8A9F61-D07C-4357-8517-25357B01FCB8), 
    version(1.0)
  ]
  typedef enum tagDriveRates
  {
    driveSidereal = 0, 
    driveLunar = 1, 
    driveSolar = 2, 
    driveKing = 3
  } DriveRates;

  [
    uuid(78CD7C77-4B45-4D7E-B267-82230EBF48E9), 
    version(1.0)
  ]
  typedef enum tagTelescopeAxes
  {
    axisPrimary = 0, 
    axisSecondary = 1, 
    axisTertiary = 2
  } TelescopeAxes;

  [
    uuid(B46CB2D9-A0CF-43D0-9916-751CC51B0391), 
    version(1.0)
  ]
  typedef enum tagGuideDirections
  {
    guideNorth = 0, 
    guideSouth = 1, 
    guideEast = 2, 
    guideWest = 3
  } GuideDirections;

  [
    uuid(465DE964-4BB1-46A5-B920-D158A3FFB34A), 
    version(1.0), 
    helpstring("Telescope Object")
  ]
  coclass Telescope
  {
    [default] interface ITelescope;
  };

  [
    uuid(45869C19-EBB6-448A-BA65-5C26EB3B6748), 
    version(1.0), 
    dual, 
    oleautomation
  ]
   interface IRate: IDispatch
  {
    [
    propget, 
    id(0x00000004)
    ]
    HRESULT _stdcall Maximum([out, retval] double * Value );
    [
    propput, 
    id(0x00000004)
    ]
    HRESULT _stdcall Maximum([in] double Value );
    [
    propget, 
    id(0x00000005)
    ]
    HRESULT _stdcall Minimum([out, retval] double * Value );
    [
    propput, 
    id(0x00000005)
    ]
    HRESULT _stdcall Minimum([in] double Value );
  };

  [
    uuid(FA35F808-D58C-421E-B7FA-4E9DA6D0DA8A), 
    version(1.0)
  ]
  coclass Rate
  {
    [default] interface IRate;
  };

  [
    uuid(E4BE0EDA-785D-4A83-85A0-F2C5AE67F3EF), 
    version(1.0), 
    helpstring("ASCOM Focuser 1.0 Driver Interface"), 
    dual, 
    nonextensible, 
    oleautomation
  ]
   interface IFocuser: IDispatch
  {
    [
    propget, 
    id(0x00000065)
    ]
    HRESULT _stdcall Absolute([out, retval] VARIANT_BOOL * __MIDL_0093 );
    [
    propget, 
    id(0x00000066)
    ]
    HRESULT _stdcall IsMoving([out, retval] VARIANT_BOOL * __MIDL_0094 );
    [
    propget, 
    id(0x00000067)
    ]
    HRESULT _stdcall Link([out, retval] VARIANT_BOOL * __MIDL_0095 );
    [
    propput, 
    id(0x00000067)
    ]
    HRESULT _stdcall Link([in] VARIANT_BOOL __MIDL_0095 );
    [
    propget, 
    id(0x00000068)
    ]
    HRESULT _stdcall MaxIncrement([out, retval] long * __MIDL_0097 );
    [
    propget, 
    id(0x00000069)
    ]
    HRESULT _stdcall MaxStep([out, retval] long * __MIDL_0098 );
    [
    propget, 
    id(0x0000006A)
    ]
    HRESULT _stdcall Position([out, retval] long * __MIDL_0099 );
    [
    propget, 
    id(0x0000006B)
    ]
    HRESULT _stdcall StepSize([out, retval] double * __MIDL_0100 );
    [
    propget, 
    id(0x0000006C)
    ]
    HRESULT _stdcall TempComp([out, retval] VARIANT_BOOL * __MIDL_0101 );
    [
    propput, 
    id(0x0000006C)
    ]
    HRESULT _stdcall TempComp([in] VARIANT_BOOL __MIDL_0101 );
    [
    propget, 
    id(0x0000006D)
    ]
    HRESULT _stdcall TempCompAvailable([out, retval] VARIANT_BOOL * __MIDL_0103 );
    [
    propget, 
    id(0x0000006E)
    ]
    HRESULT _stdcall Temperature([out, retval] double * __MIDL_0104 );
    [
    id(0x00000191)
    ]
    HRESULT _stdcall Halt( void );
    [
    id(0x00000192)
    ]
    HRESULT _stdcall SetupDialog( void );
    [
    id(0x00000193)
    ]
    HRESULT _stdcall Move([in] long val );
  };

  [
    uuid(10E6D9FE-9DAD-4AF0-B226-FE2E717796E0), 
    version(1.0), 
    helpstring("Dispatch interface for Telescope Object"), 
    dual, 
    oleautomation
  ]
   interface ITelescope: IDispatch
  {
    [
    propget, 
    id(0x00000001)
    ]
    HRESULT _stdcall AlignmentMode([out, retval] AlignmentModes * Value );
    [
    propget, 
    id(0x00000002)
    ]
    HRESULT _stdcall Altitude([out, retval] double * Value );
    [
    propget, 
    id(0x00000003)
    ]
    HRESULT _stdcall ApertureArea([out, retval] double * Value );
    [
    propget, 
    id(0x00000004)
    ]
    HRESULT _stdcall ApertureDiameter([out, retval] double * Value );
    [
    propget, 
    id(0x00000005)
    ]
    HRESULT _stdcall AtHome([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x00000006)
    ]
    HRESULT _stdcall AtPark([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x00000007)
    ]
    HRESULT _stdcall Azimuth([out, retval] double * Value );
    [
    propget, 
    id(0x00000008)
    ]
    HRESULT _stdcall CanFindHome([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x00000009)
    ]
    HRESULT _stdcall CanPark([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x0000000A)
    ]
    HRESULT _stdcall CanPulseGuide([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x0000000B)
    ]
    HRESULT _stdcall CanSetDeclinationRate([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x0000000C)
    ]
    HRESULT _stdcall CanSetGuideRates([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x0000000D)
    ]
    HRESULT _stdcall CanSetPark([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x0000000E)
    ]
    HRESULT _stdcall CanSetPierSide([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x0000000F)
    ]
    HRESULT _stdcall CanSetRightAscensionRate([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x00000010)
    ]
    HRESULT _stdcall CanSetTracking([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x00000011)
    ]
    HRESULT _stdcall CanSlew([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x00000012)
    ]
    HRESULT _stdcall CanSlewAltAz([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x00000013)
    ]
    HRESULT _stdcall CanSlewAltAzAsync([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x00000014)
    ]
    HRESULT _stdcall CanSlewAsync([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x00000015)
    ]
    HRESULT _stdcall CanSync([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x00000016)
    ]
    HRESULT _stdcall CanSyncAltAz([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x00000017)
    ]
    HRESULT _stdcall CanUnpark([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x00000018)
    ]
    HRESULT _stdcall Connected([out, retval] VARIANT_BOOL * Value );
    [
    propput, 
    id(0x00000018)
    ]
    HRESULT _stdcall Connected([in] VARIANT_BOOL Value );
    [
    propget, 
    id(0x00000019)
    ]
    HRESULT _stdcall Declination([out, retval] double * Value );
    [
    propget, 
    id(0x0000001A)
    ]
    HRESULT _stdcall DeclinationRate([out, retval] double * Value );
    [
    propput, 
    id(0x0000001A)
    ]
    HRESULT _stdcall DeclinationRate([in] double Value );
    [
    propget, 
    id(0x0000001B)
    ]
    HRESULT _stdcall Description([out, retval] BSTR * Value );
    [
    propget, 
    id(0x0000001C)
    ]
    HRESULT _stdcall DoesRefraction([out, retval] VARIANT_BOOL * Value );
    [
    propput, 
    id(0x0000001C)
    ]
    HRESULT _stdcall DoesRefraction([in] VARIANT_BOOL Value );
    [
    propget, 
    id(0x0000001D)
    ]
    HRESULT _stdcall DriverInfo([out, retval] BSTR * Value );
    [
    propget, 
    id(0x0000001E)
    ]
    HRESULT _stdcall DriverVersion([out, retval] BSTR * Value );
    [
    propget, 
    id(0x0000001F)
    ]
    HRESULT _stdcall EquatorialSystem([out, retval] EquatorialCoordinateType * Value );
    [
    propget, 
    id(0x00000020)
    ]
    HRESULT _stdcall FocalLength([out, retval] double * Value );
    [
    propget, 
    id(0x00000021)
    ]
    HRESULT _stdcall GuideRateDeclination([out, retval] double * Value );
    [
    propput, 
    id(0x00000021)
    ]
    HRESULT _stdcall GuideRateDeclination([in] double Value );
    [
    propget, 
    id(0x00000022)
    ]
    HRESULT _stdcall GuideRateRightAscension([out, retval] double * Value );
    [
    propput, 
    id(0x00000022)
    ]
    HRESULT _stdcall GuideRateRightAscension([in] double Value );
    [
    propget, 
    id(0x00000023)
    ]
    HRESULT _stdcall InterfaceVersion([out, retval] int * Value );
    [
    propget, 
    id(0x00000024)
    ]
    HRESULT _stdcall IsPulseGuiding([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x00000025)
    ]
    HRESULT _stdcall Name([out, retval] BSTR * Value );
    [
    propget, 
    id(0x00000026)
    ]
    HRESULT _stdcall RightAscension([out, retval] double * Value );
    [
    propget, 
    id(0x00000027)
    ]
    HRESULT _stdcall RightAscensionRate([out, retval] double * Value );
    [
    propput, 
    id(0x00000027)
    ]
    HRESULT _stdcall RightAscensionRate([in] double Value );
    [
    propget, 
    id(0x00000028)
    ]
    HRESULT _stdcall SideOfPier([out, retval] PierSide * Value );
    [
    propput, 
    id(0x00000028)
    ]
    HRESULT _stdcall SideOfPier([in] PierSide Value );
    [
    propget, 
    id(0x00000029)
    ]
    HRESULT _stdcall SiderealTime([out, retval] double * Value );
    [
    propget, 
    id(0x0000002A)
    ]
    HRESULT _stdcall SiteElevation([out, retval] double * Value );
    [
    propput, 
    id(0x0000002A)
    ]
    HRESULT _stdcall SiteElevation([in] double Value );
    [
    propget, 
    id(0x0000002B)
    ]
    HRESULT _stdcall SiteLatitude([out, retval] double * Value );
    [
    propput, 
    id(0x0000002B)
    ]
    HRESULT _stdcall SiteLatitude([in] double Value );
    [
    propget, 
    id(0x0000002C)
    ]
    HRESULT _stdcall SiteLongitude([out, retval] double * Value );
    [
    propput, 
    id(0x0000002C)
    ]
    HRESULT _stdcall SiteLongitude([in] double Value );
    [
    propget, 
    id(0x0000002D)
    ]
    HRESULT _stdcall Slewing([out, retval] VARIANT_BOOL * Value );
    [
    propget, 
    id(0x0000002E)
    ]
    HRESULT _stdcall SlewSettleTime([out, retval] int * Value );
    [
    propput, 
    id(0x0000002E)
    ]
    HRESULT _stdcall SlewSettleTime([in] int Value );
    [
    propget, 
    id(0x0000002F)
    ]
    HRESULT _stdcall TargetDeclination([out, retval] double * Value );
    [
    propput, 
    id(0x0000002F)
    ]
    HRESULT _stdcall TargetDeclination([in] double Value );
    [
    propget, 
    id(0x00000030)
    ]
    HRESULT _stdcall TargetRightAscension([out, retval] double * Value );
    [
    propput, 
    id(0x00000030)
    ]
    HRESULT _stdcall TargetRightAscension([in] double Value );
    [
    propget, 
    id(0x00000031)
    ]
    HRESULT _stdcall Tracking([out, retval] double * Value );
    [
    propput, 
    id(0x00000031)
    ]
    HRESULT _stdcall Tracking([in] double Value );
    [
    propget, 
    id(0x00000032)
    ]
    HRESULT _stdcall TrackingRate([out, retval] DriveRates * Value );
    [
    propput, 
    id(0x00000032)
    ]
    HRESULT _stdcall TrackingRate([in] DriveRates Value );
    [
    propget, 
    id(0x00000033)
    ]
    HRESULT _stdcall TrackingRates([out, retval] VARIANT * Value );
    [
    propget, 
    id(0x00000034)
    ]
    HRESULT _stdcall UTCDate([out, retval] DATE * Value );
    [
    propput, 
    id(0x00000034)
    ]
    HRESULT _stdcall UTCDate([in] DATE Value );
    [
    id(0x00000035)
    ]
    HRESULT _stdcall AbortSlew( void );
    [
    id(0x00000036)
    ]
    HRESULT _stdcall AxisRates([in] TelescopeAxes Axis );
    [
    id(0x00000037)
    ]
    HRESULT _stdcall CanMoveAxis([in] TelescopeAxes Axis );
    [
    id(0x00000038)
    ]
    HRESULT _stdcall CommandBlind([in] BSTR Command, [in, optional, defaultvalue(False)] VARIANT_BOOL Raw );
    [
    id(0x00000039)
    ]
    HRESULT _stdcall CommandBool([in] BSTR Command, [in] long Raw );
    [
    id(0x0000003A)
    ]
    HRESULT _stdcall CommandString([in] BSTR Command, [in, defaultvalue(False)] VARIANT_BOOL Raw );
    [
    id(0x0000003B)
    ]
    HRESULT _stdcall DestinationSideOfPier([in] double RightAscension, [in] double Declination );
    [
    id(0x0000003C)
    ]
    HRESULT _stdcall FindHome( void );
    [
    id(0x0000003D)
    ]
    HRESULT _stdcall MoveAxis([in] TelescopeAxes Axis, [in] double Rate );
    [
    id(0x0000003E)
    ]
    HRESULT _stdcall Park( void );
    [
    id(0x0000003F)
    ]
    HRESULT _stdcall PulseGuide([in] GuideDirections Direction, [in] long Duration );
    [
    id(0x00000040)
    ]
    HRESULT _stdcall SetPark( void );
    [
    id(0x00000041)
    ]
    HRESULT _stdcall SetUpDialog( void );
    [
    id(0x00000042)
    ]
    HRESULT _stdcall SlewToAltAz([in] double Azimut, [in] double Altitude );
    [
    id(0x00000043)
    ]
    HRESULT _stdcall SlewToAltAzAsync([in] double Azimut, [in] double Altitude );
    [
    id(0x00000044)
    ]
    HRESULT _stdcall SlewToCoordinates([in] double RightAscension, [in] double Declination );
    [
    id(0x00000045)
    ]
    HRESULT _stdcall SlewToCoordinatesAsync([in] double RightAscension, [in] double Declination );
    [
    id(0x00000046)
    ]
    HRESULT _stdcall SlewToTarget( void );
    [
    id(0x00000047)
    ]
    HRESULT _stdcall SlewToTargetAsync( void );
    [
    id(0x00000048)
    ]
    HRESULT _stdcall SyncToAltAz([in] double Azimuth, [in] double Altitude );
    [
    id(0x00000049)
    ]
    HRESULT _stdcall SyncToCoordinates([in] double RightAscension, [in] double Declination );
    [
    id(0x0000004A)
    ]
    HRESULT _stdcall SyncToTarget( void );
    [
    id(0x0000004B)
    ]
    HRESULT _stdcall Unpark( void );
  };

}; 